name: Sample Node.js CI/CD Pipeline
# This workflow will build a Node.js application, run tests, and deploy to AWS ECR.
# The workflow is triggered on push or pull request events to the main branch.
# It uses SonarQube for code quality analysis and Docker for containerization.
# The workflow also includes steps to configure AWS credentials and login to Amazon ECR.
# The Docker image is built and pushed to Amazon ECR with the latest tag and a tag based on the commit SHA.
# The workflow uses GitHub Actions for CI/CD and Docker Buildx for building multi-platform images.
# The workflow is designed to be efficient and secure, with secrets stored in GitHub Secrets.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # üîê Configure AWS Credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # üîê Login to Amazon ECR
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    # üê≥ Build and Push Docker Image to ECR
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
